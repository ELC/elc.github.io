<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ezequiel Leonardo Castaño Personal Website</title><link href="https://elc.github.io/" rel="alternate"></link><link href="http://feeds.feedburner.com/feeds/all-es.atom.xml" rel="self"></link><id>https://elc.github.io/</id><updated>2019-05-22T00:00:00-03:00</updated><subtitle>Ezequiel Leonardo Castaño Personal Website - In this website you will find post about christianity, programming and math</subtitle><entry><title>Generador Online de Presentación de Letras de Canciones.</title><link href="https://elc.github.io/posts/online-lyrics-presentation-generator/es" rel="alternate"></link><published>2019-05-22T00:00:00-03:00</published><updated>2019-05-22T00:00:00-03:00</updated><author><name>Ezequiel Leonardo Castaño</name></author><id>tag:elc.github.io,2019-05-22:/posts/online-lyrics-presentation-generator/es</id><summary type="html">&lt;!-- Status: draft --&gt;

&lt;p&gt;&lt;a class="gallery" href="/blog/images/online-lyrics/online-lyrics-headerimage.png"&gt;&lt;img alt="Online Lyrics Presentation Generator Header Image" class="b-lazy" data-src="/blog/images/online-lyrics/online-lyrics-headerimage.png" src="https://elc.github.io/blog/images/online-lyrics/online-lyrics-headerimage-thumbnail.png" width="1920"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;La mayoría de las veces me encuentro escribiendo presentaciones en Power Point para pasar las letras de cancioens. Esto usualmente sucede en la reunión de jóvenes de la iglesia y en los campamentos cristianos. Como el proceso es bastante repetitivo y simple, consideré adecuado programar una pequeña aplicación web para …&lt;/p&gt;</summary><content type="html">&lt;!-- Status: draft --&gt;

&lt;p&gt;&lt;a class="gallery" href="/blog/images/online-lyrics/online-lyrics-headerimage.png"&gt;&lt;img alt="Online Lyrics Presentation Generator Header Image" class="b-lazy" data-src="/blog/images/online-lyrics/online-lyrics-headerimage.png" src="https://elc.github.io/blog/images/online-lyrics/online-lyrics-headerimage-thumbnail.png" width="1920"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;La mayoría de las veces me encuentro escribiendo presentaciones en Power Point para pasar las letras de cancioens. Esto usualmente sucede en la reunión de jóvenes de la iglesia y en los campamentos cristianos. Como el proceso es bastante repetitivo y simple, consideré adecuado programar una pequeña aplicación web para generar estas presentaciones automáticamente. En este artículo mostraré cómo utilizarla y para aquellos interesados en la parte técnica también explico cómo funciona.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2 id="el-problema"&gt;&lt;a class="toclink" href="#el-problema"&gt;El Problema&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Como se dijo en la introducción, el objetivo es básicamente evitar escribir una y otra vez presentaciones cada vez que se quieren pasar letras de canciones.&lt;/p&gt;
&lt;h2 id="la-solucion"&gt;&lt;a class="toclink" href="#la-solucion"&gt;La Solución&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Desarrollar una aplicación Web para generar automáticamente la presentación en PowerPoint. Esta aplicación no requiere ninguna instalación y funcionará desde cualquier navegador, pero para una mejor experiencia de usuario se recomienda utilizarla desde un entorno de escritorio/tablet. En este artículo, dedicaré la siguiente sección a explicar cómo utilizarla para usuarios no técnicos y luego explicaré todos sus componentes desde una perspectiva técnica.&lt;/p&gt;
&lt;p&gt;Nota: Entiendo la importancia de un diseño responsivo (apto para móbiles), pero en este caso para producir una presentación que coincida con el texto, se necesitan dimensiones más grandes que las que proporciona el teléfono móvil habitual. Además, es poco probable que el usuario descargue la presentación desde un dispositivo móvil.&lt;/p&gt;
&lt;h2 id="como-usarlo"&gt;&lt;a class="toclink" href="#como-usarlo"&gt;Cómo usarlo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;La aplicación está disponible &lt;a href="https://elc.github.io/link/lyrics_presentation" target="_blank"&gt;online&lt;/a&gt;, tan pronto como la abras, verás algo como lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/online-lyrics/tutorial.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/online-lyrics/tutorial.png" src="https://elc.github.io/blog/images/online-lyrics/tutorial-thumbnail.png" width="1245"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;En la pantalla hay 3 áreas principales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Área de letras&lt;/strong&gt;: es el área marcada en &lt;strong&gt;naranja&lt;/strong&gt;, aquí es donde se escribirá el texto de la letra. Para escribir correctamente la letra, hay que seguir las instrucciones (ver abajo).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Selección de idioma&lt;/strong&gt;: En la esquina superior derecha, hay dos banderas marcadas con &lt;strong&gt;verde&lt;/strong&gt;, cada una cambia el idioma de toda la página.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Botones&lt;/strong&gt; Esta área está marcada con &lt;strong&gt;púrpura&lt;/strong&gt;, incluye dos botones, uno para generar la presentación y el otro para borrar el área de texto.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="instrucciones-para-escribir-la-letra"&gt;&lt;a class="toclink" href="#instrucciones-para-escribir-la-letra"&gt;Instrucciones para escribir la letra&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Para escribir la letra, se debe seguir la siguiente guía:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Escribir cada verso sin líneas en blanco.&lt;/li&gt;
&lt;li&gt;Separar los versos con líneas en blanco.&lt;/li&gt;
&lt;li&gt;Separar las canciones con tres guiones ("---").&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El tamaño del área de letras se establece para que coincida con la presentación resultante, de modo que si el texto encaja bien en la página web, también encajará en la presentación.&lt;/p&gt;
&lt;h2 id="como-funciona-tecnico"&gt;&lt;a class="toclink" href="#como-funciona-tecnico"&gt;Cómo funciona (Técnico)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Esta aplicación web está construida usando vanilla &lt;code&gt;HTML5&lt;/code&gt;, &lt;code&gt;CSS3&lt;/code&gt; y &lt;code&gt;Javascript&lt;/code&gt;. Además, se utiliza una biblioteca &lt;code&gt;Javascript&lt;/code&gt; para crear la presentación, esta biblioteca es &lt;a href="https://github.com/gitbrent/PptxGenJS" target="_blank"&gt;&lt;strong&gt;PptxGenJS&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El &lt;code&gt;CSS&lt;/code&gt; está escrito dentro del &lt;code&gt;HTML&lt;/code&gt; para evitar usar otra petición al servidor, esto se hace porque todo el estilo es de unas 100 líneas y toda la aplicación está contenida en un único archivo html. El &lt;code&gt;Javascript&lt;/code&gt; está separado para evitar mezclar las capas de lógica y presentación.&lt;/p&gt;
&lt;p&gt;Primero mostraré todo el código y luego lo dividiré en partes y explicaré parte por parte.&lt;/p&gt;
&lt;p&gt;El código &lt;code&gt;Javascript&lt;/code&gt; es el siguiente:&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createPPT&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;pptx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PptxGenJS&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Presentation created with ELC&amp;#39;s Presentation Generator&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defineSlideMaster&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;bkgd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;placeholder&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;FFFFFF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;fontFace&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Verdana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;middle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;paraSpaceAfter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;paraSpaceBefore&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}]&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="nx"&gt;parseLyrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;verse&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;verse&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;createSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;createSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;verse&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Presentation - Created with ELCs Presentation Generator&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;parseLyrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[\r\n]{3,}/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;slide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addNewSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;slide&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clearText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;changeLang&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localized&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;separator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="funcion-principal"&gt;&lt;a class="toclink" href="#funcion-principal"&gt;Función principal&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;La función &lt;code&gt;createPPT&lt;/code&gt; es la función principal que se llama cada vez que se hace clic en el botón "Generar presentación". Realiza las siguientes acciones:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Crear el objeto de presentación.&lt;/li&gt;
&lt;li&gt;Configurar el Título.&lt;/li&gt;
&lt;li&gt;Definir la plantilla&lt;/li&gt;
&lt;li&gt;Extraer el texto&lt;/li&gt;
&lt;li&gt;Agregar cada una de las diapositivas&lt;/li&gt;
&lt;li&gt;Guardar el archivo&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cada una de las acciones está representada en una de las siguientes líneas. Para mantenerlo simple, las tareas más complejas se explican con más detalle a continuación. Los métodos utilizados para establecer el título y guardar son evidentes y no requieren explicación.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createPPT&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;pptx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PptxGenJS&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Presentation created with ELC&amp;#39;s Presentation Generator&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Definir la plantilla&lt;/span&gt;

    &lt;span class="c1"&gt;// Extraer el texto&lt;/span&gt;

    &lt;span class="c1"&gt;// Agregar diapositivas&lt;/span&gt;

    &lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Presentation - Created with ELCs Presentation Generator&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="definicion-de-plantilla"&gt;&lt;a class="toclink" href="#definicion-de-plantilla"&gt;Definición de plantilla&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Para lograr un estilo consistente, se debe utilizar una plantilla. Según mi propia experiencia, el fondo negro con letras blancas da los mejores resultados. Para definir una Plantilla se utiliza el método &lt;code&gt;defineSlideMaster&lt;/code&gt;. Sus parámetros corresponden a la obtención de diapositivas con las siguientes características:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Color de fondo negro: &lt;code&gt;bkgd: '000000'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Asignar un título único para usar cuando se crea la diapositiva: &lt;code&gt;title: 'Template'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Dar un identificador único a un elemento de texto dentro de la diapositiva: &lt;code&gt;name: 'body'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Establecer las coordenadas del elemento de texto: &lt;code&gt;x: 0, y: 0,&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Establezca las dimensiones, tanto de ancho como de alto: &lt;code&gt;w: "100%", h: "100%",&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Usar un tamaño de fuente grande: &lt;code&gt;fontSize: 44&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Utilice el color Blanco para la fuente: &lt;code&gt;color: 'FFFFFF'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Centrar el texto horizontal y verticalmente: &lt;code&gt;align: "center", valign: 'middle',&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Establezca el espacio entre párrafos: &lt;code&gt;paraSpaceAfter: '6', paraSpaceBefore: '6'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Al combinar todo lo anterior y siguiendo la sintaxis proporcionada por la documentación oficial, el resultado es el siguiente código:&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Definición de Plantilla&lt;/span&gt;

&lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defineSlideMaster&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;bkgd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;placeholder&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;FFFFFF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;fontFace&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Verdana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;middle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;paraSpaceAfter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;paraSpaceBefore&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="extraccion-de-texto"&gt;&lt;a class="toclink" href="#extraccion-de-texto"&gt;Extracción de texto&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Una vez definida la plantilla, se debe extraer el texto, para ello se utiliza una práctica muy común en JS. Simplemente se hace referencia al elemento mediante un ID determinado y luego se extrae su valor. En este caso el elemento es un TextArea definido en HTML5&lt;/p&gt;
&lt;p&gt;El código resultante es el siguiente:&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Extracción de Texto&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="anadir-diapositiva"&gt;&lt;a class="toclink" href="#anadir-diapositiva"&gt;Añadir diapositiva&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Después de extraer el texto, debe ser analizado y luego se debe agregar una nueva diapositiva para cada verso.&lt;/p&gt;
&lt;p&gt;La función de parsing devuelve una lista de cadenas, cada una de las cuales puede ser un verso o un &lt;code&gt;---&lt;/code&gt; que básicamente significa "Diapositiva vacía". Tanto la &lt;code&gt;parseLyrics&lt;/code&gt; como la &lt;code&gt;createSlide&lt;/code&gt; se explican a continuación.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Añadir Diapositiva&lt;/span&gt;

&lt;span class="nx"&gt;parseLyrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;verse&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;verse&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;createSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;createSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;verse&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="parsing"&gt;&lt;a class="toclink" href="#parsing"&gt;Parsing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Uno nunca podría saber lo que el usuario escribiría, y, para soportar varios idiomas (especialmente aquellos con caracteres especiales), es importante usar un separador que funcione universalmente, en este caso la línea en blanco separará dos versos y los tres guiones (---) separarán las canciones.&lt;/p&gt;
&lt;p&gt;Para ignorar varias líneas en blanco y luego dividirla se utiliza una expresión regular y luego se usa el método &lt;code&gt;split&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;parseLyrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[\r\n]{3,}/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="crear-diapositiva"&gt;&lt;a class="toclink" href="#crear-diapositiva"&gt;Crear diapositiva&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cada diapositiva tendrá un texto diferente, así que para crear una diapositiva se debe proporcionar el motor de presentación (en este caso la biblioteca &lt;code&gt;pptx&lt;/code&gt;) y el texto a insertar (el argumento &lt;code&gt;text&lt;/code&gt;), luego se crea la nueva diapositiva usando la plantilla predefinida, después de lo cual el texto en mayúsculas se añade usando el placeholder definido en la plantilla.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;slide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pptx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addNewSlide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;slide&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="boton-borrar-texto"&gt;&lt;a class="toclink" href="#boton-borrar-texto"&gt;Botón Borrar texto&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En caso de que el usuario desee eliminar todo en el Área de letras, se proporciona un botón, la funcionalidad es sobrescribir el contenido actual del Área de texto con una cadena vacía.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clearText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="localizacion"&gt;&lt;a class="toclink" href="#localizacion"&gt;Localización&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Esta función adicional proporciona localización del lado del cliente a través de &lt;a href="https://github.com/fabi1cazenave/webL10n" target="_blank"&gt;WebL10n&lt;/a&gt;, cada cadena de caracteres de la aplicación web está disponible tanto en inglés como en español, pero se podrían añadir más idiomas en el futuro si fuera necesario.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;changeLang&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localized&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;separator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lyrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webL10n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verse3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Christianity"></category><category term="Christian"></category><category term="WebApp"></category></entry><entry><title>Guía introductoria de Git con Interfaz Visual</title><link href="https://elc.github.io/posts/git-guide-with-visual-interface/es" rel="alternate"></link><published>2019-04-24T00:00:00-03:00</published><updated>2019-04-24T00:00:00-03:00</updated><author><name>Ezequiel Leonardo Castaño</name></author><id>tag:elc.github.io,2019-04-24:/posts/git-guide-with-visual-interface/es</id><summary type="html">&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/git-guide-with-visual-interface-headerimage.png"&gt;&lt;img alt="Git Tutorial Header Image" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/git-guide-with-visual-interface-headerimage.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/git-guide-with-visual-interface-headerimage-thumbnail.png" width="2000"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;Siendo estudiante de ingeniería en sistemas, en sucesivas oportunidades me encontré con sistemas de control de versiones, algunas veces desde materias relacionadas con la programación y otras en materias relacionadas con la ingeniería de software.&lt;/p&gt;
&lt;p&gt;Recordando que cuando yo tuve que aprender todos estos conceptos (especialmente como funciona Git), pasé …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/git-guide-with-visual-interface-headerimage.png"&gt;&lt;img alt="Git Tutorial Header Image" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/git-guide-with-visual-interface-headerimage.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/git-guide-with-visual-interface-headerimage-thumbnail.png" width="2000"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;Siendo estudiante de ingeniería en sistemas, en sucesivas oportunidades me encontré con sistemas de control de versiones, algunas veces desde materias relacionadas con la programación y otras en materias relacionadas con la ingeniería de software.&lt;/p&gt;
&lt;p&gt;Recordando que cuando yo tuve que aprender todos estos conceptos (especialmente como funciona Git), pasé por varias dificultades, decidí hacer una guía introductoria con conceptos básicos de Git y cómo utilizarlo mediante un software con interfaz visual.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Personalmente, pienso que para empezar, utilizar una interfaz visual puede ser útil y didáctico, sin embargo, comparto la idea de que entender como funciona la herramienta desde la consola es fundamental para una comprensión profunda de los conceptos.&lt;/p&gt;
&lt;p&gt;En este tutorial se verán de manera resumida las características principales de un software particular que personalmente pienso que es el mejor, llamado GitKraken. Esta guía no pretende en ninguna medida ser exhaustiva ni detallada en todas las funciones de GitKraken, sino dar al usuario el conocimiento básico para que pueda usar la herramienta y poco a poco pueda ir explorando las demás características por su cuenta.&lt;/p&gt;
&lt;p&gt;&lt;a href="#caracteristicas-adicionales"&gt;Al final del documento&lt;/a&gt; se detallan algunas de las funcionalidades avanzadas para que el usuario pueda conocer que otras características tiene Git.&lt;/p&gt;
&lt;p&gt;A continuación dejo el índice de contenidos en caso de que se desee saltear a alguna sección determinada&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduccion-a-git"&gt;Introducción a Git&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#areas-en-git"&gt;Areas en Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stage-vs-commit"&gt;Stage vs Commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repositorios-remotos"&gt;Repositorios remotos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#branches"&gt;Branches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#software-adicional"&gt;Software adicional&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fork-de-un-repositorio"&gt;Fork de un repositorio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-encontrar-el-repositorio-original"&gt;1. Encontrar el repositorio original&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-realizar-el-fork"&gt;2. Realizar el Fork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#clonar-un-repositorio"&gt;Clonar un repositorio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-crear-un-repositorio"&gt;1. Crear un repositorio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#1-alternativa-crear-un-repositorio"&gt;1 (Alternativa). Crear un repositorio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-completar-la-informacion-necesaria"&gt;2. Completar la información necesaria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-obtener-url-del-repositorio"&gt;3. Obtener URL del Repositorio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;4. Abrimos la ventana de Clone dentro del GitKraken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-alternativa-1-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;4 (Alternativa 1). Abrimos la ventana de Clone dentro del GitKraken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-alternativa-2-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;4 (Alternativa 2). Abrimos la ventana de Clone dentro del GitKraken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-pegamos-la-url"&gt;5. Pegamos la URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-notificacion-de-exito"&gt;5. Notificación de Éxito&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#abrir-un-repositorio"&gt;Abrir un repositorio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-ventana-de-open"&gt;1. Ventana de Open&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#1-alternativa-1-ventana-de-open"&gt;1 (Alternativa 1). Ventana de Open&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#1-alternativa-2-ventana-de-open"&gt;1 (Alternativa 2). Ventana de Open&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-seleccionar-el-repositorio"&gt;2. Seleccionar el repositorio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-seleccionar-la-carpeta"&gt;3. Seleccionar la carpeta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#elementos-de-la-interfaz"&gt;Elementos de la interfaz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#interfaz-basica"&gt;Interfaz básica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arbol-de-commits-y-branches"&gt;Arbol de Commits y Branches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#anadir-cambios"&gt;Añadir Cambios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sincronizacion-con-repositorios-remotos"&gt;Sincronización con repositorios remotos&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#descargar-los-cambios-del-repositorio-remoto"&gt;Descargar los cambios del repositorio remoto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#subir-los-cambios-al-repositorio-remoto"&gt;Subir los cambios al repositorio remoto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ejemplo-de-fetch-y-pull"&gt;Ejemplo de Fetch y Pull&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#trabajo-en-multiples-branches"&gt;Trabajo en múltiples branches&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#crear-branch"&gt;Crear Branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unir-branches-merge"&gt;Unir Branches (Merge)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#borrar-branch"&gt;Borrar Branch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pull-requests"&gt;Pull Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caracteristicas-adicionales"&gt;Características Adicionales&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="introduccion-a-git"&gt;&lt;a class="toclink" href="#introduccion-a-git"&gt;Introducción a Git&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Git es una tecnología de sistema de control de versiones (VCS), surge como alternativa a SVN, Hg y TFS y su propósito original fue controlar las versiones del kernel de Linux.&lt;/p&gt;
&lt;p&gt;Antes de comenzar con el vocabulario específico es necesario explicar por qué se debe usar git u otro VCS.&lt;/p&gt;
&lt;p&gt;Problema: Al estar trabajando en un proyecto, los archivos sufren múltiples transformaciones, esto es especialmente notorio en proyectos de diseño gráfico y de desarrollo de software. Con el avance del tiempo, es normal que se detecten errores y se desee volver a una instancia anterior, muchas veces lo que hace en este caso es hacer copias de respaldo, sin embargo, este enfoque es poco práctico en entornos con cambios constantes y al aumentar la cantidad de archivos y crece de manera sustancial cuando se trabaja en equipos grandes.&lt;/p&gt;
&lt;p&gt;Solución de los VCS: Cada sistema propone una solución distinta, en el caso de Git siempre se hablan de cambios a nivel de línea, es decir, un archivo cambia cuando una de sus líneas cambias y si se realizan varios cambios en una misma línea, cuenta como un único cambio. Asimismo, si se realiza un cambio en varias líneas en un mismo archivo, cuentan como varios cambios, tantos como líneas se hayan modificado. Siempre que se hable de cambios se hará con este sentido, cambios en líneas. Esto hace que Git sea sumamente útil para archivos de texto con múltiples líneas (como los archivos fuente de un lenguaje de programación) y poco aplicable a archivos que no siguen este formato (como por ejemplo, los ejecutables, imágenes, etc.)&lt;/p&gt;
&lt;h3 id="areas-en-git"&gt;&lt;a class="toclink" href="#areas-en-git"&gt;Areas en Git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Git trabaja principalmente separando los cambios en 3 áreas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Working Area: Son los archivos con los que uno está actualmente trabajando.&lt;/li&gt;
&lt;li&gt;Staging Area: Son los próximos cambios que serán guardados en el repositorio.&lt;/li&gt;
&lt;li&gt;Repository: Son los archivos guardados, generalmente local y en internet.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Así mismo, para pasar de un área a otro, existen distintas transiciones. Para pasar del Working Area al Staging Area se realiza un "Stage" y para pasar del Staging Area al repository se realiza un “Commit”&lt;/p&gt;
&lt;h3 id="stage-vs-commit"&gt;&lt;a class="toclink" href="#stage-vs-commit"&gt;Stage vs Commit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En un proceso, un usuario trabaja con sus archivos en el Working Area, una vez que haya terminado los cambios deseados, puede seleccionar exactamente que cambios desea agregar al repositorio, estos cambios son elegidos y se "mueven" a la Staging Area (el término mover en este caso es engañoso ya que en el sistema local los archivos no sufren ninguna modificación). Una vez que todos los cambios hayan sido movidos al Staging Area se puede realizar un “Commit”, el commit consiste básicamente en “empaquetar todo lo que esté en el Staging Area, asociarle un título y una descripción y subirlo al repositorio”.&lt;/p&gt;
&lt;p&gt;Al principio esta forma de trabajo podría dar la impresión de que la Staging Area no cumple ninguna función, sin embargo cobra relevancia especialmente cuando uno quiere realizar un commit con un subconjunto de todos los cambios hechos, por ejemplo, se realizaron cambios en la interfaz gráfica y en la base de datos y uno quiere que cada "paquete de cambios" esté en un commit distinto, para eso, primero movería al Staging Area los cambios de la base de datos, haría el commit y luego repetiría el proceso con los cambios de la interfaz gráfica.&lt;/p&gt;
&lt;p&gt;El usuario no está obligado a realizar un commit con todos los cambios. OJO: Uno podría mover al Staging Area sólo un subconjunto de las líneas modificadas en un archivo, es por eso que es importante recordar que el término "cambio" hace referencia a líneas y no a archivos.&lt;/p&gt;
&lt;p&gt;Una vez realizado el commit, los cambios quedan definitivamente guardados en el repositorio, el repositorio siempre existe en un nivel local en la máquina del usuario y adicionalmente suele utilizarse una copia de manera remota en algún proveedor que lo permita, los más comunes son GitHub, Gitlab y Bitbucket.&lt;/p&gt;
&lt;h3 id="repositorios-remotos"&gt;&lt;a class="toclink" href="#repositorios-remotos"&gt;Repositorios remotos&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cuando uno trabaja con un repositorio remoto, surgen tres términos importantes: Pull (Tirar), Push (Empujar) y Clone (Clonar). Como sugieren los nombres, Pull trae los cambios del repositorio remoto y los aplica en el repositorio local, Push sube los cambios del repositorio local al repositorio remoto. Clone, por otro lado, copia el repositorio remoto y crea uno local, esta operación sólo se realiza una vez (No confundir con Fork).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fork vs Clone:&lt;/strong&gt;  Un Fork es una copia independiente de un repositorio. Cuando uno realiza un Clone, se tiene la intención de trabajar en ese repositorio, cuando uno realiza un Fork se tiene la intención de realizar una variante e independizarse (hasta cierto punto) del repositorio original. Hacer un Fork reemplaza el proceso de creación del repositorio y para hacerlo uno debe ir al repositorio original&lt;/p&gt;
&lt;p&gt;NOTA: Siempre y cuando los cambios no se solapen (es decir que dos usuarios no hayan modificado la misma línea), el mismo sistema Git se encarga de combinarlos. Cuando dos o más usuarios modifican la misma línea del mismo archivo es necesaria una "Resolución de conflictos". Es un tema avanzado sin embargo puede requerirse a diario en entornos con múltiples programadores, aquellos que utilicen git como únicos usuarios no deberían preocuparse por este aspecto.&lt;/p&gt;
&lt;h3 id="branches"&gt;&lt;a class="toclink" href="#branches"&gt;Branches&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;El último concepto importante son las "branches", esta es la clave de la utilidad de Git, dentro de un repositorio uno puede tener múltiples branches (ramas en español), cada branch permite tener una Working Area independiente, esto se hace para mantener los cambios aislados, si bien el proceso de Stage-Commit es el mismo que el mencionado anteriormente, uno puede desear experimentar una nueva característica pero sin riesgos que se pierda o mezcle con el código que ya funciona correctamente, para eso se hace un nuevo branch y en el caso de éxito, se puede unir (merge en inglés) a la branch principal. Existen múltiples criterios para la creación de branches, algunas organizaciones utilizan una branch por características, otras una branch por desarrollador, etc. A la forma de utilizar las branches se la suele llamar “Git Strategy” o “Git Workflow”, siendo considerada una buena práctica tener un esquema simplificado con las siguientes branches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Master: Donde se tiene el código de la última versión estable&lt;/li&gt;
&lt;li&gt;Release: Donde se concentran todos los cambios que estarán en la próxima versión y se realizan las pruebas finales&lt;/li&gt;
&lt;li&gt;Develop: Donde se tiene el código experimental y que aún está siendo probado&lt;/li&gt;
&lt;li&gt;Hot Fix: Donde se reparan errores detectados a posteriori (fuera de las pruebas)&lt;/li&gt;
&lt;li&gt;Features: Una rama independiente por cada característica que se le quiera agregar al software.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lo anterior puede visualizarse mucho mejor en una imagen. Cada flecha indica una operación de unión (merge)&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_0.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_0.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_0-thumbnail.png" width="658"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="software-adicional"&gt;&lt;a class="toclink" href="#software-adicional"&gt;Software adicional&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Git es una aplicación de consola, sin embargo, existen múltiples softwares con interfaz gráfica construidos sobre la aplicación de consola base. En este caso vamos a detallar el uso típico de uno de los más populares: GitKraken&lt;/p&gt;
&lt;p&gt;Por cuestiones de simplicidad, se asume que el usuario tiene correctamente instalado el software Gitkraken y que está listo para usarse, por lo tanto no se detallan pasos de instalación y configuración inicial.&lt;/p&gt;
&lt;h2 id="fork-de-un-repositorio"&gt;&lt;a class="toclink" href="#fork-de-un-repositorio"&gt;Fork de un repositorio&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Como se mencionó, un fork es una copia independiente de un repositorio. El repositorio ya tiene su propio creador e historial de branches y commits pero uno desea hacer una copia independiente. Este procedimiento puede variar de un proveedor de repositorios remoto a otro, a continuación se muestra el procedimiento para hacer esto en Github&lt;/p&gt;
&lt;h3 id="1-encontrar-el-repositorio-original"&gt;&lt;a class="toclink" href="#1-encontrar-el-repositorio-original"&gt;1. Encontrar el repositorio original&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Primero buscamos en Github el repositorio del cual queremos hacer un Fork, en este caso se utilizará el repositorio de Manim, el motor de animaciones creado  por 3Blue1Brown&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_1.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_1.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_1-thumbnail.png" width="1280"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como se puede ver en la imagen, el creador del repositorio es 3b1b y el usuario logeado actualmente es ELC por lo que el repositorio no es propio.&lt;/p&gt;
&lt;h3 id="2-realizar-el-fork"&gt;&lt;a class="toclink" href="#2-realizar-el-fork"&gt;2. Realizar el Fork&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Para hacer un fork, basta con hacer clic en el botón Fork en la parte superior&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_2.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_2.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_2-thumbnail.png" width="922"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inmediatamente después, GitHub nos redireccionará a una pantalla que nos indica que se está creando el Fork&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_3.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_3.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_3-thumbnail.png" width="1268"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una vez finalizado el proceso, se creará un repositorio homónimo en la cuenta logeada&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_4.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_4.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_4-thumbnail.png" width="924"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como se puede ver en la imagen anterior, ahora el repositorio pertenece a ELC, con una pequeña leyenda debajo que indica que el repositorio es un Fork. Una muestra de que este repositorio es independiente y pertenece a la cuenta logeada es que aparece una nueva sección "Settings" que de otra forma no aparecería &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt;  Esta sección podría aparecer si uno fuera colaborador del repositorio, sin embargo esa característica puede variar de proveedor en proveedor y no se detallará en esta guía.&lt;/p&gt;
&lt;p&gt;Una última confirmación podría ser el conteo de Forks que es un número común para todos los Forks.&lt;/p&gt;
&lt;p&gt;A partir de ahora el avance de este nuevo repositorio puede ser completamente independiente del original.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANTE:&lt;/strong&gt; ¿Cúal es la diferencia entre hacer un fork y crear un repositorio idéntico con los mismos archivos? Al realizar un Fork uno tiene una historia de commits compartida con el repositorio original, de forma tal que es posible combinar cambios nuevos del original a cualquiera de los Forks (merge) y de los Forks de nuevo al original (Pull Request).&lt;/p&gt;
&lt;p&gt;El procedimiento alternativo de crear un repositorio desde cero así como clonarno desde GitKraken se detalla en la siguiente sección&lt;/p&gt;
&lt;h2 id="clonar-un-repositorio"&gt;&lt;a class="toclink" href="#clonar-un-repositorio"&gt;Clonar un repositorio&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El enfoque más tradicional es crear primeramente el repositorio en el servidor remoto (Github o similar) y luego clonarlo. En este caso vamos a crear un repositorio llamado "gitkraken-tutorial" en Github.&lt;/p&gt;
&lt;h3 id="1-crear-un-repositorio"&gt;&lt;a class="toclink" href="#1-crear-un-repositorio"&gt;1. Crear un repositorio&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Esto puede hacerse desde la página principal de Github&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_5.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_5.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_5-thumbnail.png" width="1279"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="1-alternativa-crear-un-repositorio"&gt;&lt;a class="toclink" href="#1-alternativa-crear-un-repositorio"&gt;1 (Alternativa). Crear un repositorio&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;O desde la sección de repositorios&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_6.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_6.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_6-thumbnail.png" width="1279"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="2-completar-la-informacion-necesaria"&gt;&lt;a class="toclink" href="#2-completar-la-informacion-necesaria"&gt;2. Completar la información necesaria&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANTE:&lt;/strong&gt; Para poder clonar nuestro repositorio debe estar "Inicializado" por lo tanto, es indispensable tildar la opción “Initialize this repository with a README”. Las opciones de gitignore permiten a git ignorar ciertos archivos (archivos temporales, caches, etc.) y la licencia permite elegir una licencia estándar entre un listado.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_7.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_7.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_7-thumbnail.png" width="678"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="3-obtener-url-del-repositorio"&gt;&lt;a class="toclink" href="#3-obtener-url-del-repositorio"&gt;3. Obtener URL del Repositorio&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Para poder clonar el repositorio desde GitKraken pueden utilizarse dos perspectivas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vincular la cuenta de GitHub con la de Gitkraken&lt;/li&gt;
&lt;li&gt;Utilizar la URL del repositorio&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Todos los servicios de repositorios tienen una URL pública así que se tomará este enfoque por ser el más universal. Una vez seguido los pasos en las imágenes, la URL quedará copiada en el portapapeles.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_8.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_8.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_8-thumbnail.png" width="1277"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_9.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_9.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_9-thumbnail.png" width="1277"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="4-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;&lt;a class="toclink" href="#4-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;4. Abrimos la ventana de Clone dentro del GitKraken&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En el menú File, Seleccionar la opción "Clone Repo"&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_10.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_10.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_10-thumbnail.png" width="370"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="4-alternativa-1-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;&lt;a class="toclink" href="#4-alternativa-1-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;4 (Alternativa 1). Abrimos la ventana de Clone dentro del GitKraken&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En todo momento, se puede utilizar el botón que se encuentra en la esquina superior izquierda&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_11.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_11.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_11-thumbnail.png" width="1302"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A continuación, se deberá escoger la opción Clone&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_12.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_12.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_12-thumbnail.png" width="164"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="4-alternativa-2-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;&lt;a class="toclink" href="#4-alternativa-2-abrimos-la-ventana-de-clone-dentro-del-gitkraken"&gt;4 (Alternativa 2). Abrimos la ventana de Clone dentro del GitKraken&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En caso de no tener ningún repositorio abierto, puede accederse al menú directamente desde la pantalla de inicio&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_13.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_13.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_13-thumbnail.png" width="1302"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="5-pegamos-la-url"&gt;&lt;a class="toclink" href="#5-pegamos-la-url"&gt;5. Pegamos la URL&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Adicionalmente se puede detallar la ruta donde se clonará el repositorio y así como cambiar el nombre de la carpeta destino. Es recomendable tener una carpeta "Repositories" y clonar todos los repositorios allí.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_14.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_14.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_14-thumbnail.png" width="796"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="5-notificacion-de-exito"&gt;&lt;a class="toclink" href="#5-notificacion-de-exito"&gt;5. Notificación de Éxito&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Una vez clonado el repositorio deberá aparecer en la parte superior una notificación que detalla que la operación fue exitosa. Uno puede utilizar el botón "Open Now" para abrir el repositorio inmediatamente. En este caso no se hará para ilustrar como se abre un repositorio desde cero.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_15.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_15.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_15-thumbnail.png" width="1302"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="abrir-un-repositorio"&gt;&lt;a class="toclink" href="#abrir-un-repositorio"&gt;Abrir un repositorio&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Una vez clonado el repositorio es necesario abrirlo para empezar a trabajar.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt; El repositorio podría haber sido inicializado en lugar de clonado pero este escenario es poco probable ya que luego se debería realizar una vinculación con el repositorio remoto. Por lo que por lo general se utiliza el enfoque planteado al principio, la inicialización de repositorios queda fuera del alcance de esta guía.&lt;/p&gt;
&lt;h3 id="1-ventana-de-open"&gt;&lt;a class="toclink" href="#1-ventana-de-open"&gt;1. Ventana de Open&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En el menú File, seleccionar la opción "Open Repo"&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_16.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_16.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_16-thumbnail.png" width="368"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="1-alternativa-1-ventana-de-open"&gt;&lt;a class="toclink" href="#1-alternativa-1-ventana-de-open"&gt;1 (Alternativa 1). Ventana de Open&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Adicionalmente puede utilizarse el ícono de la esquina superior izquierda&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_17.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_17.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_17-thumbnail.png" width="1302"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="1-alternativa-2-ventana-de-open"&gt;&lt;a class="toclink" href="#1-alternativa-2-ventana-de-open"&gt;1 (Alternativa 2). Ventana de Open&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En caso de no tener ningún repositorio abierto, puede utilizarse el botón de la pantalla de inicio.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_18.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_18.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_18-thumbnail.png" width="1302"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="2-seleccionar-el-repositorio"&gt;&lt;a class="toclink" href="#2-seleccionar-el-repositorio"&gt;2. Seleccionar el repositorio&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Se seleccionar "Open a Repository"&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_19.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_19.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_19-thumbnail.png" width="360"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="3-seleccionar-la-carpeta"&gt;&lt;a class="toclink" href="#3-seleccionar-la-carpeta"&gt;3. Seleccionar la carpeta&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Navegar hasta la carpeta donde se encuentra el repositorio, una manera fácil de identificarla es que debería verse una carpeta llamada ".git" (Esta carpeta puede no aparecer si uno no tiene habilitados los archivos ocultos de Windows).&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_20.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_20.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_20-thumbnail.png" width="875"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="elementos-de-la-interfaz"&gt;&lt;a class="toclink" href="#elementos-de-la-interfaz"&gt;Elementos de la interfaz&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="interfaz-basica"&gt;&lt;a class="toclink" href="#interfaz-basica"&gt;Interfaz básica&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Al abrir un repositorio nos encontraremos con la interfaz básica&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_21.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_21.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_21-thumbnail.png" width="1300"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="arbol-de-commits-y-branches"&gt;&lt;a class="toclink" href="#arbol-de-commits-y-branches"&gt;Arbol de Commits y Branches&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Al tener varios commits y branches, en la parte central, es posible ver las bifurcaciones y las uniones, en la siguiente imagen se muestra un proyecto con varios branches (Sólo a modo de ejemplo).&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_22.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_22.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_22-thumbnail.png" width="807"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="anadir-cambios"&gt;&lt;a class="toclink" href="#anadir-cambios"&gt;Añadir Cambios&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Las herramientas de git pueden separarse en dos categorías:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integradas con los IDE&lt;/li&gt;
&lt;li&gt;Desacopladas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Muchos IDE vienen con su propia integración con Git, algunos ejemplos de esto son Eclipse, Visual Studio, PyCharm. Sin embargo, es posible utilizar aplicaciones completamente desacopladas como Gitkraken, Github Desktop o el mismo git de consola.&lt;/p&gt;
&lt;p&gt;Las primeras tienen la ventaja de que el usuario no tiene que salir de la aplicación en la que desarrolla el código y las pruebas, pero tiene la desventaja de que puede confundir fácilmente cual es su branch actual y si el sistema está en un estado consistente, además, cada IDE tendrá su interfaz especial, y los IDE suelen cambiar si se cambia el lenguaje de programación. Por otro lado, las herramientas desacopladas como Gitkraken permiten que el desarrollador utilice el IDE sólo para lo que fue diseñado, la programación, la depuración y las pruebas, abstrayéndose totalmente del sistema de control de versiones, este enfoque tiene como ventaja que el usuario sólo debe preocuparse por el control de versiones al comenzar a trabajar y al momento de hacer los Stage-Commit y que se utiliza la misma interfaz independientemente de que IDE se haya utilizado, pero trae como desventaja que debe contarse con otro software adicional instalado.&lt;/p&gt;
&lt;p&gt;Gracias a que Gitkraken tiene este enfoque es posible trabajar como se suele hacer habitualmente en el IDE tradicional y cuando se deseen añadir cambios al repositorio lo que aparecerá será algo como lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_23.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_23.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_23-thumbnail.png" width="343"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;La sigla WIP (Work in Progress) hace referencia al Working Area. Al hacer clic en este recuadro se podrá ver en la parte derecha los cambios realizados separados por archivos y también una clara división entre la Working Area y la Staging Area.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_24.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_24.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_24-thumbnail.png" width="322"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Asimismo, es importante aclarar la función de tres botones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cesto de basura en la esquina superior derecha: BORRA todos los cambios del Working Area, usar sólo si se sabe lo que se está haciendo&lt;/li&gt;
&lt;li&gt;Tree: Permite visualizar los archivos en forma de árbol de directorios, dependiendo de la configuración puede no estar seleccionado por defecto, se recomienda utilizarlo&lt;/li&gt;
&lt;li&gt;Stage Files/changes to commit: Genera un commit con el título y la descripción dados de todos los cambios que están en el Staging Area&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_25.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_25.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_25.png" width="329"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_26.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_26.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_26.png" width="336"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Si uno hace clic sobre alguno de los archivos ya sea dentro del Working como del Staging Area, puede ver un detalle de los cambios:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_27.png"&gt;&lt;img alt="image alt text" class="b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_27.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_27-thumbnail.png" width="1261"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cada línea sombreada con rojo implica que esa línea estaba en la última versión y será eliminada, las sombreadas con verde indican que no estaban en la última versión y serán añadidas. En Git no existe el concepto de modificar una línea por lo tanto si se hace una modificación, se borrará la línea de la versión anterior y se añadirá una idéntica pero con los cambios realizados.&lt;/p&gt;
&lt;p&gt;Si uno posiciona el mouse sobre una de esas líneas aparecerá un botón con un signo más (+) que nos permitirá mover líneas individuales al Staging Area:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_28.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_28.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_28-thumbnail.png" width="80"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitkraken, a su vez, identifica cambios por secciones en archivos y permite agregar varias secciones al Staging Area&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_29.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_29.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_29-thumbnail.png" width="173"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Por último, si uno desea añadir todos los cambios de un archivo al Staging Area, puede posicionar el cursor sobre ese archivo y utilizar el botón "Stage File" que aparecerá. También es posible pasar TODOS los archivos del Working Area al Staging Area con el botón “Stage all Changes”:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_30.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_30.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_30-thumbnail.png" width="414"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El proceso para quitar cambios del Staging Area y pasarlos al Working Area es idéntico, sólo se debe seleccionar primeramente el archivo correspondiente desde el Staging Area, en este caso los botones son de color rojo y el botón con el más (+) pasa a ser un menos (-):&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_31.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_31.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_31-thumbnail.png" width="74"&gt;&lt;/a&gt;
&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_32.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_32.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_32-thumbnail.png" width="131"&gt;&lt;/a&gt;
&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_33.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_33.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_33-thumbnail.png" width="424"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una vez movidos los cambios deseados al Staging Area, se puede crear el commit deseado, para ello hace falta asignarle un título, también se puede detallar una descripción opcional:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_34.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_34.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_34-thumbnail.png" width="328"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una vez hecho el commit, aparecerá en la pantalla principal con el nombre que se le haya asignado:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_35.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_35.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_35-thumbnail.png" width="346"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Es importante descatar que esto genera el commit en el repositorio LOCAL y que estos cambios no impactaron aún en el repositorio remoto, Gitkraken nos muestra esto utilizando una computadora para el repositorio Local y el logo del usuario de Github para representar el repositorio remoto. En la siguiente sección se verá como sincronizar ambos repositorios.&lt;/p&gt;
&lt;h2 id="sincronizacion-con-repositorios-remotos"&gt;&lt;a class="toclink" href="#sincronizacion-con-repositorios-remotos"&gt;Sincronización con repositorios remotos&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Como se mencionó antes, para mantener dos repositorios actualizados hace falta utilizar las acciones de Pull y Push&lt;/p&gt;
&lt;h3 id="descargar-los-cambios-del-repositorio-remoto"&gt;&lt;a class="toclink" href="#descargar-los-cambios-del-repositorio-remoto"&gt;Descargar los cambios del repositorio remoto&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Es considerado una buena práctica, siempre antes de subir los cambios, hacer un Pull para traer cualquier cambio que no pudiéramos tener en nuestro equipo local. En esta oportunidad tendremos que distinguir entre la acción Pull y la acción Fetch.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fetch: Revisa si hay cambios en el repositorio remoto y nos muestra cual es el estado del remoto con respecto al local&lt;/li&gt;
&lt;li&gt;Pull: Hace Fetch y aplica esos cambios en el repositorio local.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fetch es por lo tanto una acción completamente segura, mientras que Pull puede traer cambios que generen colisiones con los nuestros, a pesar de que lo anterior no sea frecuente y sólo sea posible en entornos con múltiples usuarios, es considerado una buena práctica que el usuario resuelva los conflictos en su computadora local y que luego pueda subir los cambios. De no ser así, el repositorio remoto podría quedar en un estado inconsistente, deteniendo el avance de los demás miembros del equipo.&lt;/p&gt;
&lt;p&gt;En la barra de acciones del Gitkraken tenemos la acción de Fetch:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_36.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_36.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_36-thumbnail.png" width="398"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Para acceder a la acción Pull debemos elegir la flecha que está junto a Fetch:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_37.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_37.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_37-thumbnail.png" width="398"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_38.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_38.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_38-thumbnail.png" width="376"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;En el caso del repositorio de ejemplo el Pull debería ser exitoso ya que no hubo cambios en el repositorio remoto&lt;/p&gt;
&lt;h3 id="subir-los-cambios-al-repositorio-remoto"&gt;&lt;a class="toclink" href="#subir-los-cambios-al-repositorio-remoto"&gt;Subir los cambios al repositorio remoto&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Para subir los cambios es necesario primero realizar un Pull para resolver los conflictos (si los hubiera) una vez resueltos, se puede realizar un Push utilizando el botón asociado en la barra de acciones:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_39.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_39.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_39-thumbnail.png" width="393"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una vez realizado, la forma más fácil de verificar que fue exitoso se ver el árbol de commits&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_40.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_40.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_40-thumbnail.png" width="350"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;En esta oportunidad tanto el logo de usuario de Github como la computadora se encuentran juntos, mostrando así que el contenido se encuentra sincronizado.&lt;/p&gt;
&lt;h3 id="ejemplo-de-fetch-y-pull"&gt;&lt;a class="toclink" href="#ejemplo-de-fetch-y-pull"&gt;Ejemplo de Fetch y Pull&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Para ilustrar como se vería una situación inversa (se hicieron cambios en el repositorio remoto y queremos descargarlos). Primeramente hacemos Fetch y veremos algo como lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_41.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_41.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_41-thumbnail.png" width="362"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como se puede ver, el branch master está "adelantado" y tiene un commit llamado “Update README.md” que sólo está en el repositorio remoto (evidenciado por el logo de la cuenta de Github). Y nuestra versión local está “detrás”. En esta situación debemos evaluar los cambios y si existen conflictos (incluyendo los archivos del Working Area).  Es recomendable no tener nada en el Working Area al momento de hacer Pull, es decir, que todos los cambios ya estén dentro de commits, esto simplifica el proceso y disminuye la probabilidad de hallar conflictos. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt;  Existen situaciones avanzadas donde uno puede guardar temporalmente los cambios del Working Area en un Stash pero esta característica se encuentra fuera del alcance de esta guía.&lt;/p&gt;
&lt;p&gt;En caso de no existir conflictos, se puede realizar un Pull sin problemas:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_42.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_42.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_42-thumbnail.png" width="340"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El resultado es el esperado, tanto el repositorio local como el remoto se encuentran sincronizados.&lt;/p&gt;
&lt;h2 id="trabajo-en-multiples-branches"&gt;&lt;a class="toclink" href="#trabajo-en-multiples-branches"&gt;Trabajo en múltiples branches&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Una vez que se pueda trabajar eficientemente en una rama, es sumamente recomendable seleccionar una Git Strategy y utilizar múltiples ramas.&lt;/p&gt;
&lt;h3 id="crear-branch"&gt;&lt;a class="toclink" href="#crear-branch"&gt;Crear Branch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Para crear rama primero debemos posicionarnos en una rama base, esta es la rama de la cual se bifurcará el nuevo branch &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt;  Existe el concepto de ramas huérfanas, que son ramas que no se derivan de ninguna otra rama. Sin embargo su uso suele ser muy particular y específico y por ende están fuera del alcance de esta guía.&lt;/p&gt;
&lt;p&gt;En este caso vamos a crear una rama de master, le agregaremos dos commits, la uniremos y luego la borraremos.&lt;/p&gt;
&lt;p&gt;En primer lugar nos posicionamos en master, para ello bastan con hacer doble clic en "master"&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_43.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_43.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_43-thumbnail.png" width="391"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Luego utilizamos el botón "Branch" de la barra de acciones&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_44.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_44.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_44-thumbnail.png" width="381"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Luego escribimos el nombre de la rama y presionamos enter:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_45.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_45.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_45-thumbnail.png" width="356"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitkraken nos permite ver en varios lugares que la rama fue creada con éxito&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_46.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_46.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_46-thumbnail.png" width="503"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sin embargo, es posible observar que en el árbol de commits no aparece la rama master, esto se debe a que se encuentra oculta en el ícono +1:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_47.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_47.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_47-thumbnail.png" width="503"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Al pasar el cursor por arriba podemos ver que la rama es visible nuevamente:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_48.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_48.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_48-thumbnail.png" width="330"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Esta simplificación de la intefaz se debe a que el contenido de ambas ramas es idéntico (todavía no realizamos cambios) y si bien puede ser un poco confusos para los principiantes es sumamente útil cuando se tienen múltiples ramas. Por otro lado, la ayuda visual de GitKraken nos permite observar que el branch "add-license" sólo existe en el contexto local y que aún no existe en el repositorio remoto.&lt;/p&gt;
&lt;h3 id="unir-branches-merge"&gt;&lt;a class="toclink" href="#unir-branches-merge"&gt;Unir Branches (Merge)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Para poder unir dos branches es necesario que éstas sean diferentes, para ello se añaden algunos commits a la rama "add-license". Luego de añadir los commits, se obtiene algo como lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_49.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_49.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_49-thumbnail.png" width="327"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Si bien la rama sigue existiendo sólo en el contexto local, es importante ver como se encuentra "adelantada" a la rama master. Si bien en el esquema presentado al principio las ramas se disponen de forma paralela una a la otra, Gitkraken sólo las dispone de esa forma cuando existen varias “líneas de cambios”, es decir, sólo cuando la rama master se haya modificado y que esa modificación no sea alguno de los commits de la rama con la que está alineada (add-license) en este caso. Para ilustrar este ejemplo se añadirá un cambio a la rama master directamente (no en la rama add-license).&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_50.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_50.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_50-thumbnail.png" width="331"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Esta forma de visualizar las ramas es más similar a la vista con anterioridad, la vista cambió porque se agregó el commit "Add Contribution Guide" directamente en master.&lt;/p&gt;
&lt;p&gt;Antes de unir las ramas vamos a realizar un Push, en este caso, como la rama no existe en el repositorio remoto, nos preguntará si la queremos vincular con alguna rama del repositorio remoto ya existente, en caso de dejar el espacio en blanco y clickear en "Submit", creará una rama homónima en el repositorio remoto.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_51.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_51.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_51-thumbnail.png" width="777"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ahora ambas ramas están sincronizadas con el repositorio remoto:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_52.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_52.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_52-thumbnail.png" width="333"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Si bien no era necesario hacer un Push de la rama antes de unirla, es considerado una buena práctica para que quede público el historial de cambios y que los demás usuarios puedan visualizar quien, y como hizo los cambios.&lt;/p&gt;
&lt;p&gt;Para unir las ramas (merge) Uno debe hacer clic en el nombre de la rama origen y arrastrar y soltar en el nombre de la rama destino, esto desplegará el siguiente menú, donde seleccionamos la opción de Merge.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_53.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_53.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_53-thumbnail.png" width="356"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_54.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_54.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_54-thumbnail.png" width="446"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una vez elegida la opción, el árbol de commits y branches se verá similar al siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_55.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_55.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_55-thumbnail.png" width="332"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como puede verse el merge fue exitoso, sin embargo aún no se verá reflejado en el repositorio remoto, por lo tanto, es necesario activar el repositorio master (haciendo doble click en el nombre) y luego hacer un Push.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_56.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_56.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_56-thumbnail.png" width="329"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una vez hecho el Push, tanto las ramas como la operación de Merge se encuentran sincronizadas en el repositorio remoto y local&lt;/p&gt;
&lt;h3 id="borrar-branch"&gt;&lt;a class="toclink" href="#borrar-branch"&gt;Borrar Branch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A lo largo de la vida de un proyecto de desarrollo pueden crearse infinidad de ramas, por lo tanto, para mantener la interfaz limpia, es una buena práctica eliminar las ramas luego de que se unieron (merge) a master (o a la rama que corresponda según el Git Workflow establecido)&lt;/p&gt;
&lt;p&gt;Para eliminar una rama basta con hacer clic derecho sobre el nombre y seleccionamos la opción que la elimina tanto del repositorio local como del remoto&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_57.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_57.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_57-thumbnail.png" width="460"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitKraken nos advertirá que esta es una operación destructiva y que no puede deshacerse, seleccionamos Delete&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_58.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_58.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_58-thumbnail.png" width="717"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una vez que la rama se haya eliminado exitosamente el árbol de commits y branches se verá similar al siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_59.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_59.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_59-thumbnail.png" width="331"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como puede verse, ya no existe la rama borrada ni en el repositorio local ni en el remoto, sin embargo, y es en esto donde está la utilidad, puede verse como claramente alguna vez existió y consistió en dos commits que luego fueron unidos al master. La ventaja de esta funcionalidad es que uno puede eliminar las ramas y no perder la historia de lo que se hizo, teniendo una separación en los commits que permite fácilmente rastrear quien hizo que cambios y como fueron hechos. Esto no sería posible (o mejor dicho, sería muchísimo más complejo) si sólo se trabajara con la rama master.&lt;/p&gt;
&lt;h2 id="pull-requests"&gt;&lt;a class="toclink" href="#pull-requests"&gt;Pull Requests&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;En un entorno de desarrollo, es poco común que los desarrolladores realicen merge a master directamente, es por eso que se utiliza un mecanismo de aprobación y revisión antes de que se puedan realizar los merge en las ramas críticas. Cada proveedor llama a ese proceso de manera distinta, en el más popular (Github) ese proceso se llama Pull Request.&lt;/p&gt;
&lt;p&gt;Una Pull Request es básicamente decir lo siguiente: Tengo cambios hechos y quisiera unirlos a esta rama. Es una práctica común en las ramas más críticas dentro de proyectos de desarrollo, donde a la persona encargada de esas revisiones y aprobaciones se la suele llamar Release Manager y también es sumamente popular en los proyectos Open Source, donde se tiene el repositorio principal y las personas que quieran contribuir, al no tener permisos de editar el repositorio directamente, pueden realizar Pull Requests. El creador del repositorio podrá, luego, aceptarlas o rechazarlas.&lt;/p&gt;
&lt;p&gt;Si bien las Pull Requests suelen hacerse mediante la interfaz del proveedor (Github en este caso). Son posibles hacerlas desde GitKraken también.&lt;/p&gt;
&lt;p&gt;Sólo con fines ilustrativos se muestra el procedimiento:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Se hace clic derecho en la rama desde la cual se quiere hacer la Pull Request&lt;/li&gt;
&lt;li&gt;Se selecciona la opción de la Pull Request&lt;/li&gt;
&lt;li&gt;Se completan los campos solicitados&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_60.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_60.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_60-thumbnail.png" width="397"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/git-guide-with-visual-interface/image_61.png"&gt;&lt;img alt="image alt text" class="narrow b-lazy" data-src="/blog/images/git-guide-with-visual-interface/image_61.png" src="https://elc.github.io/blog/images/git-guide-with-visual-interface/image_61-thumbnail.png" width="479"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt;  Las Pull Requests generalmente se deben realizar de una manera específica que se detalla en el mismo repositorio del software al que uno quiere contribuir por lo que el ejemplo mostrado es trivial, sólo para tener una noción de cómo sería el procedimiento.&lt;/p&gt;
&lt;h2 id="caracteristicas-adicionales"&gt;&lt;a class="toclink" href="#caracteristicas-adicionales"&gt;Características Adicionales&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Aparte de todo lo mencionado en esta guía, queda aún mucho terreno para explorar tanto en lo que permite Git como en lo que se puede hacer con GitKraken, a continuación se listan algunas de estas posibilidades para que el lector pueda indagar en mayor detalle si lo desea&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tener repositorios dentro de repositorios. Buscar: &lt;strong&gt;Submodules&lt;/strong&gt; y&lt;strong&gt; Subtree&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Aplicar sólo un commit de una rama a otra y no hacer una unión de historial. Buscar: &lt;strong&gt;Cherry Pick Commit&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tener ramas completamente independientes de otras: Buscar: &lt;strong&gt;Orphan Branch&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Unificar ramas olvidando la historia. Buscar: &lt;strong&gt;Rebase&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Agregar contenidos a un commit anterior. Buscar: &lt;strong&gt;Amend&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Deshacer varios commits conservando los cambios. Buscar: &lt;strong&gt;Soft Reset&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Forzar cambios en el repositorio remoto. Buscar: &lt;strong&gt;Push Force&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Es posible revertir cambios de un commit específico. Buscar: &lt;strong&gt;Revert&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Guardar en un espacio temporal los cambios del Working Area. Buscar: &lt;strong&gt;Stash&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Crear etiquetas para identificar versiones específicas de todo el repositorio cuando se encuentra en un estado consistente (linea base). Buscar: &lt;strong&gt;Tags&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Algunas de las características mencionadas sólo pueden realizarse desde la consola, es decir, no son soportadas completamente en GitKraken&lt;/p&gt;
&lt;h2 id="recursos-adicionales"&gt;&lt;a class="toclink" href="#recursos-adicionales"&gt;Recursos Adicionales&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gitkraken.com/" target="_blank"&gt;Página web oficial de GitKraken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/" target="_blank"&gt;Página web oficial de Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learngitbranching.js.org/" target="_blank"&gt;Git Console Sandbox&lt;/a&gt;: Permite experimentar con varios comandos de la consola git en un entorno Sandbox dentro del navegador.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dictcp/awesome-git" target="_blank"&gt;Awesome Git&lt;/a&gt;: Una lista compilada de increíbles herramientas de Git y recursos.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software Engineer"></category><category term="Git"></category><category term="GUI"></category><category term="GitKraken"></category></entry><entry><title>Juegos Bíblicos para Jóvenes y Adolescentes</title><link href="https://elc.github.io/posts/juegos-biblicos/es" rel="alternate"></link><published>2018-12-28T00:00:00-03:00</published><updated>2018-12-28T00:00:00-03:00</updated><author><name>Ezequiel Leonardo Castaño</name></author><id>tag:elc.github.io,2018-12-28:/posts/juegos-biblicos/es</id><summary type="html">

&lt;p&gt;Compilado de juegos bíblicos listos para imprimir. Pensados y adaptados para jóvenes y adolescentes que buscan conocer más a Dios.&lt;/p&gt;


&lt;p&gt;EDICIÓN 2020.18.15: Ya está disponible la &lt;a href="/link/tabu-biblico-web"&gt;app web para el Tabú Bíblico&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;En el pasado yo siempre tuve una mirada despectiva de los juegos, pensé que eran innecesarios …&lt;/p&gt;</summary><content type="html">

&lt;p&gt;Compilado de juegos bíblicos listos para imprimir. Pensados y adaptados para jóvenes y adolescentes que buscan conocer más a Dios.&lt;/p&gt;


&lt;p&gt;EDICIÓN 2020.18.15: Ya está disponible la &lt;a href="/link/tabu-biblico-web"&gt;app web para el Tabú Bíblico&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;En el pasado yo siempre tuve una mirada despectiva de los juegos, pensé que eran innecesarios e infantiles pero fue el Señor que me sorprendió dandome la habilidad para diseñarlos y encontrarme con que resultaron ser de suma utilidad, tanto en una reunión de jóvenes como de adolescentes.&lt;/p&gt;
&lt;p&gt;En este artículo voy a dejar todos los juegos que vaya diseñando, la idea es tener un lugar centralizado donde las personas puedan referenciar y también proveer plantillas para que puedan ser adaptados si hiciera falta. Cada juego va a tener una imagen que muestra como es, las instrucciones, un enlace a una versión en PDF lista para imprimir y recortar y un enlace a una versión de Google Docs lista para descargar y adaptar.&lt;/p&gt;
&lt;p&gt;Adicionalmente, toda crítica, sugerencia y comentario es bien recibido, pueden dejarlo expresado en los comentarios al final de este artículo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;También te puede interesar:&lt;/strong&gt; si participás en una actividad donde se utilizan presentationes en Power Point para pasar las letras de las canciones (campamentos, reunión de jóvenes, etc.), puede interesarte esta &lt;strong&gt;&lt;a href="https://elc.github.io/lyrics-presentation/" target="_blank"&gt;aplicación online&lt;/a&gt;&lt;/strong&gt; para generar las presentaciones automáticamente.&lt;/p&gt;
&lt;h2 id="indice"&gt;&lt;a class="toclink" href="#indice"&gt;Índice&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tabu-biblico"&gt;Tabú Bíblico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#trivia-adolescente"&gt;Trivia Adolescente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conoce-la-historia"&gt;Conocé la historia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#espadeo-biblico-version-modificada"&gt;Espadeo Bíblico - Versión Modificada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#memo-paralelo"&gt;Memo Paralelo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arma-la-historia"&gt;Armá la Historia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tabu-biblico"&gt;&lt;a class="toclink" href="#tabu-biblico"&gt;Tabú Bíblico&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="#indice"&gt;Volver al Índice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/tabu_biblico_01.jpg"&gt;&lt;img alt="conoce_la_historia" class="narrow b-lazy" data-src="/blog/images/juegos-biblicos/tabu_biblico_01.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/tabu_biblico_01-thumbnail.jpg" width="665"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Se arman equipos y se juega por turnos, en el turno de un equipo, se designa una persona, a esta persona se le entregan una serie de tarjetas, las tarjetas van a tener una palabra principal y una serie de palabras secundarias. El objetivo es que la persona designada pueda hacer que su equipo adivine cual es la palabra principal sin utilizar las palabras secundarias, ni sus familias de palabras, tampoco puede usar mímica ni decir cuántas letras tiene la palabra principal o usar referencias fonéticas.&lt;/p&gt;
&lt;p&gt;La persona designada puede saltear la carta si lo cree conveniente. Por cada tarjeta adivinada en el tiempo fijado, el equipo gana un punto y por cada tarjeta salteada o penalizada el equipo pierde un punto. Luego de una cierta cantidad de rondas prefijada el equipo con más puntos gana.&lt;/p&gt;
&lt;p&gt;La tarjetas tienen distintas dificultades y deben estar mezcladas previamente, una vez que la tarjeta fue adivinada se separa, las tarjetas salteadas o penalizadas siguen en juego.&lt;/p&gt;
&lt;p&gt;Descargar el documento editable (Ver &lt;a href="#instrucciones-para-la-version-editable"&gt;Instrucciones&lt;/a&gt;) &lt;a href="/link/tabu-biblico" target="_blank"&gt;&lt;img alt="Download DOC" class="narrow svg-button" src="https://elc.github.io/theme/images/DOC.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Descargar el PDF listo para imprimir &lt;a href="/link/tabu-biblico-pdf" target="_blank"&gt;&lt;img alt="Downlaod PDF" class="narrow svg-button" src="https://elc.github.io/theme/images/PDF.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ahora también disponible como app web para celulares y PCs: Disponible online &lt;a href="/link/tabu-biblico-web"&gt;aquí&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="trivia-adolescente"&gt;&lt;a class="toclink" href="#trivia-adolescente"&gt;Trivia Adolescente&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="#indice"&gt;Volver al Índice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/trivia_adolescentes_01.jpg"&gt;&lt;img alt="conoce_la_historia" class="narrow b-lazy" data-src="/blog/images/juegos-biblicos/trivia_adolescentes_01.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/trivia_adolescentes_01-thumbnail.jpg" width="657"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El juego consiste en responder preguntas - para ganar - se deben responder al menos una pregunta correctamente de cada categoría. Dentro de cada categoría hay preguntas de distintas dificultades.&lt;/p&gt;
&lt;p&gt;Las categorías son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Historia&lt;/li&gt;
&lt;li&gt;Geografía&lt;/li&gt;
&lt;li&gt;Arte y Entretenimiento&lt;/li&gt;
&lt;li&gt;Ciencia&lt;/li&gt;
&lt;li&gt;Deportes&lt;/li&gt;
&lt;li&gt;Biblia&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Descargar el documento editable (Ver &lt;a href="#instrucciones-para-la-version-editable"&gt;Instrucciones&lt;/a&gt;) &lt;a href="/link/trivia-adolescente" target="_blank"&gt;&lt;img alt="Download DOC" class="narrow svg-button" src="https://elc.github.io/theme/images/DOC.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Descargar el PDF listo para imprimir &lt;a href="/link/trivia-adolescente-pdf" target="_blank"&gt;&lt;img alt="Downlaod PDF" class="narrow svg-button" src="https://elc.github.io/theme/images/PDF.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="conoce-la-historia"&gt;&lt;a class="toclink" href="#conoce-la-historia"&gt;Conocé la historia&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="#indice"&gt;Volver al Índice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/conoce_la_historia_01.jpg"&gt;&lt;img alt="conoce_la_historia" class="b-lazy" data-src="/blog/images/juegos-biblicos/conoce_la_historia_01.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/conoce_la_historia_01-thumbnail.jpg" width="1344"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A cada jugador se le coloca una tarjeta en la espalda, cada tarjeta contiene una serie de oraciones que están vinculadas a un personaje bíblico, pueden ser eventos, lugares, pasajes o cualquier otro dato relacionado.&lt;/p&gt;
&lt;p&gt;Los jugadores deberán preguntarles a los demás que dice su tarjeta, sin embargo sólo le dirán un dato, y para darle ese dato debe mencionar correctamente y en orden todos los anteriores. Es decir, el primer dato se lo dirá sin preguntar nada, para darle el segundo debe decir el primero, para darle el tercero debe decir el primero y el segundo.&lt;/p&gt;
&lt;p&gt;El primer jugador que se acerque al organizador y pueda decir todos los datos correctamente y en orden será el ganador.&lt;/p&gt;
&lt;p&gt;Descargar el documento editable (Ver &lt;a href="#instrucciones-para-la-version-editable"&gt;Instrucciones&lt;/a&gt;) &lt;a href="/link/conoce-historia" target="_blank"&gt;&lt;img alt="Download DOC" class="narrow svg-button" src="https://elc.github.io/theme/images/DOC.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Descargar el PDF listo para imprimir &lt;a href="/link/conoce-historia-pdf" target="_blank"&gt;&lt;img alt="Downlaod PDF" class="narrow svg-button" src="https://elc.github.io/theme/images/PDF.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="espadeo-biblico-version-modificada"&gt;&lt;a class="toclink" href="#espadeo-biblico-version-modificada"&gt;Espadeo Bíblico - Versión Modificada&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="#indice"&gt;Volver al Índice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/espadeo_01.jpg"&gt;&lt;img alt="conoce_la_historia" class="narrow b-lazy" data-src="/blog/images/juegos-biblicos/espadeo_01.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/espadeo_01-thumbnail.jpg" width="669"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/espadeo_02.jpg"&gt;&lt;img alt="conoce_la_historia" class="narrow b-lazy" data-src="/blog/images/juegos-biblicos/espadeo_02.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/espadeo_02-thumbnail.jpg" width="748"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/espadeo_03.jpg"&gt;&lt;img alt="conoce_la_historia" class="narrow b-lazy" data-src="/blog/images/juegos-biblicos/espadeo_03.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/espadeo_03-thumbnail.jpg" width="739"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Este es un juego con 3 modalidales, el organizador puede alternar entre ellas o escoger la que más se adapte a sus necesidades.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modalidad clásica: Se lee una pequeña introducción y luego la cita de un versículo y los equipos deben buscarlo, el que lo encuentre debe comenzar a leerlo inmediatamente, si es el versículo correcto, gana.&lt;/li&gt;
&lt;li&gt;Modalidad Completar el versículo: Se lee una pequeña introducción y luego un versículo en forma incompleta, los equipos tienen la posibilidad de completarlo si lo saben de memoria, se dan unos segundos para esto. En caso de que ninguno de los equipos haya respondido, se dice cuál es la cita y se procede con la modalidad clásica, el equipo que complete el versículo antes es el que gana.&lt;/li&gt;
&lt;li&gt;Modalidad Preguntas con Opciones: Se hace una pregunta y se dan tres citas como posibles soluciones, en todos los casos hay sólo una respuesta correcta. Cada equipo debe buscar las opciones y comenzar a leer el versículo que corresponda. El primer equipo que lea el versículo correspondiente a la pregunta es el ganador. Los equipos pueden decir la cita y el versículo de memoria si lo saben.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Descargar el documento editable (Ver &lt;a href="#instrucciones-para-la-version-editable"&gt;Instrucciones&lt;/a&gt;) &lt;a href="/link/espadeo-biblico" target="_blank"&gt;&lt;img alt="Download DOC" class="narrow svg-button" src="https://elc.github.io/theme/images/DOC.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Descargar el PDF listo para imprimir &lt;a href="/link/espadeo-biblico-pdf" target="_blank"&gt;&lt;img alt="Downlaod PDF" class="narrow svg-button" src="https://elc.github.io/theme/images/PDF.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="memo-paralelo"&gt;&lt;a class="toclink" href="#memo-paralelo"&gt;Memo Paralelo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="#indice"&gt;Volver al Índice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/memo_paralelo_01.jpg"&gt;&lt;img alt="conoce_la_historia" class="b-lazy" data-src="/blog/images/juegos-biblicos/memo_paralelo_01.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/memo_paralelo_01-thumbnail.jpg" width="1092"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/memo_paralelo_02.jpg"&gt;&lt;img alt="conoce_la_historia" class="b-lazy" data-src="/blog/images/juegos-biblicos/memo_paralelo_02.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/memo_paralelo_02-thumbnail.jpg" width="1077"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Se arman equipos y a cada equipo se le da una serie de tarjetas, cada equipo coloca sus tarjetas boca abajo. Una persona de cada equipo será la encargada de dar vuelta las tarjetas, cada tarjeta contiene una cita a un pasaje bíblico o un pasaje escrito. El objetivo del juego es agrupar las tarjetas de a pares según el tema que traten. &lt;/p&gt;
&lt;p&gt;La persona designada sólo podrá voltear dos tarjetas a la vez, si desea voltear una tercera deberá colocar boca abajo alguna de las otras dos antes. Los miembros del equipo deben ayudar buscando los pasajes e identificar cuales son los que están relacionados.&lt;/p&gt;
&lt;p&gt;Es importante asegurarse que antes de darles las tarjetas a los equipos cada tarjeta tenga su par. El organizador tendrá una lista de todos los pares para poder validar si los equipos resolvieron el juego correctamente, el equipo que haya encontrado más pares en el tiempo fijado será el ganador.&lt;/p&gt;
&lt;p&gt;Descargar el documento editable (Ver &lt;a href="#instrucciones-para-la-version-editable"&gt;Instrucciones&lt;/a&gt;) &lt;a href="/link/memo-paralelo" target="_blank"&gt;&lt;img alt="Download DOC" class="narrow svg-button" src="https://elc.github.io/theme/images/DOC.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Descargar el PDF listo para imprimir &lt;a href="/link/memo-paralelo-pdf" target="_blank"&gt;&lt;img alt="Downlaod PDF" class="narrow svg-button" src="https://elc.github.io/theme/images/PDF.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="arma-la-historia"&gt;&lt;a class="toclink" href="#arma-la-historia"&gt;Armá la Historia&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="#indice"&gt;Volver al Índice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/arma_la_historia_01.jpg"&gt;&lt;img alt="conoce_la_historia" class="b-lazy" data-src="/blog/images/juegos-biblicos/arma_la_historia_01.jpg" src="https://elc.github.io/blog/images/juegos-biblicos/arma_la_historia_01-thumbnail.jpg" width="1090"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A cada equipo se le da una serie de tarjetas, algunas contienen pasajes y otras contienen eventos o historias. Cada equipo deberá asociar cada tarjeta de evento con una de un pasaje y luego ordenarlas para formar la historia bíblica.&lt;/p&gt;
&lt;p&gt;Al principio a cada equipo se le da una historia fácil y cada vez que completen una historia se le da una de mayor dificultad, sólo se considerará correcta si todas las tarjetas están en la posición adecuada. El organizador deberá decir que es incorrecta sin mencionar dónde está el error. En caso de empate el punto va para el equipo que más tarjetas correctas tenga en la historia en curso.&lt;/p&gt;
&lt;p&gt;Descargar el documento editable (Ver &lt;a href="#instrucciones-para-la-version-editable"&gt;Instrucciones&lt;/a&gt;) &lt;a href="/link/arma-historia" target="_blank"&gt;&lt;img alt="Download DOC" class="narrow svg-button" src="https://elc.github.io/theme/images/DOC.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Descargar el PDF listo para imprimir &lt;a href="/link/arma-historia-pdf" target="_blank"&gt;&lt;img alt="Downlaod PDF" class="narrow svg-button" src="https://elc.github.io/theme/images/PDF.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="instrucciones-para-la-version-editable"&gt;&lt;a class="toclink" href="#instrucciones-para-la-version-editable"&gt;Instrucciones para la versión editable&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Cada juego tiene se puede acceder de dos maneras, en PDF o en formato de Google Docs (Similar al Microsoft Word). Al final de la descripción de cada juego habrá dos botones para cada forma respectivamente.&lt;/p&gt;
&lt;p&gt;La versión en PDF no es editable pero es la más fácil de imprimir (no se cambia el formato al imprimir), en caso de requerir ediciones, éstas pueden hacerse libremente en el formato de Google Docs o Microsoft Word.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Si decidiste modificar alguno de los juegos, me encantaría que pudieras compartir las modificaciones mandándome un email a &lt;/em&gt;&lt;em&gt;castanoezequielleonardo@gmail.com&lt;/em&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Para utilizar la versión de Google Docs se debe iniciar primero en la cuenta de Google (en su correo de @gmail) y luego tendrá la posibilidad de "Hacer una copia" esa copia es completamente suya y allí podrá hacer todas las modificaciones necesarias.&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/descargar_tutorial_01.png"&gt;&lt;img alt="Hacer Copia Google Docs" class="narrow b-lazy" data-src="/blog/images/juegos-biblicos/descargar_tutorial_01.png" src="https://elc.github.io/blog/images/juegos-biblicos/descargar_tutorial_01-thumbnail.png" width="669"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Por otro lado, en caso de preferir el entorno de Microsoft Word, basta con hacer click en "Descargar" y luego seleccionar el formato preferido, el de Microsoft Word es el "docx".&lt;/p&gt;
&lt;p&gt;&lt;a class="gallery" href="/blog/images/juegos-biblicos/descargar_tutorial_02.png"&gt;&lt;img alt="Descargar Docx" class="narrow b-lazy" data-src="/blog/images/juegos-biblicos/descargar_tutorial_02.png" src="https://elc.github.io/blog/images/juegos-biblicos/descargar_tutorial_02-thumbnail.png" width="669"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Christianity"></category><category term="Christian"></category><category term="Games"></category><category term="Bible"></category></entry><entry><title>Graficando Fractales Paso a Paso con Python</title><link href="https://elc.github.io/posts/plotting-fractals-step-by-step-with-python/es" rel="alternate"></link><published>2018-11-04T00:00:00-03:00</published><updated>2018-11-04T00:00:00-03:00</updated><author><name>Ezequiel Leonardo Castaño</name></author><id>tag:elc.github.io,2018-11-04:/posts/plotting-fractals-step-by-step-with-python/es</id><summary type="html">&lt;p&gt;&lt;a class="gallery" href="/blog/images/fractals/factals_headerimage.png"&gt;&lt;img alt="Fractals Header Image" class="b-lazy" data-src="/blog/images/fractals/factals_headerimage.png" src="https://elc.github.io/blog/images/fractals/factals_headerimage-thumbnail.png" width="1920"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;Los fractales son increibles, se construyen con patrones muy complejos y permiten acercarse de manera indefinida. En este post voy a mostrarles cuan facilmente pueden graficarse diversos tipos de fractales utilizando una herramienta llamada Sistemas L y el módulo Turtle de Python para hacer el gráfico paso a paso.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;En …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="gallery" href="/blog/images/fractals/factals_headerimage.png"&gt;&lt;img alt="Fractals Header Image" class="b-lazy" data-src="/blog/images/fractals/factals_headerimage.png" src="https://elc.github.io/blog/images/fractals/factals_headerimage-thumbnail.png" width="1920"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;Los fractales son increibles, se construyen con patrones muy complejos y permiten acercarse de manera indefinida. En este post voy a mostrarles cuan facilmente pueden graficarse diversos tipos de fractales utilizando una herramienta llamada Sistemas L y el módulo Turtle de Python para hacer el gráfico paso a paso.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;En este post no voy a adentrarme demasiado en detalles técnicos, en cambio, les voy a dar una breve introducción, muchos ejemplos animados y al final el código para que puedan generar los que quieran. Si quieres saltear la teoría e ir directamente a las animaciones, puedes ir directamente a los &lt;a href="#ejemplos-animados"&gt;Ejemplos animados&lt;/a&gt;, si por otro lado querés ver el código, puedes ir a &lt;a href="#codigo"&gt;esa sección&lt;/a&gt;. Adicionalmente, &lt;a href="#recursos-adicionales"&gt;al final&lt;/a&gt; dejaré recursos adicionales tanto para el código como para la parte matemática para aquellos que quieran profundizar.&lt;/p&gt;
&lt;h2 id="que-es-un-fractal"&gt;&lt;a class="toclink" href="#que-es-un-fractal"&gt;¿Qué es un Fractal?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Primero veamos una definición "no estricta" de lo que es un fractal: es basicamente una figura geométrica que muestra las mismas características sin importar cuanto te acerques.&lt;/p&gt;
&lt;p&gt;No es del todo correcto pero para aquellos que quieran conocer la definición exacta, aquí se las dejo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un fractal es un objecto o cantidad que muestra auto-similaridad, en un sentido téctico, en todas sus escalas. El objeto no necesita exhibir exactamente la misma estructura en todas sus escala sino el mismo "tipo" de estructuras debe aparecer en todas las escalas. Un gráfico o cantidad en al graficarlo en función de su escala en un eje logarítmico da una línea recta, cuya pendiente es su "dimensión fractal" - &lt;a href="http://mathworld.wolfram.com/Fractal.html" target="_blank"&gt;Math World Traducido&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="como-podemos-graficar-fractales-con-python"&gt;&lt;a class="toclink" href="#como-podemos-graficar-fractales-con-python"&gt;¿Cómo podemos Graficar Fractales con Python?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Típicamente, los fractales son difíciles de graficar, esto se debe al concepto que está íntimamente relacionado con ellos, la recursión. Cuando se habla de gráficos, usualmente se habla de píxeles o vectores, pero siempre existe un límite, sin embargo, los fractales son por definición infinitamente recursivos. Esto implica que cuando grafiquemos un fractal vamos a deternos en algún momento, de aquí surge el concepto de "iteración". En cada iteración el fractal se vuelve más y más complejo pero en cierto momento es imposible distinguir entre dos iteraciones sucesivas (esto ocurre debido a que los cambios se producen al nivel de píxeles), así que es bastante razonable detenerse en ese momento, a veces incluso es bastante evidente cúal será la forma del fractal y uno podría deternerse incluso antes.&lt;/p&gt;
&lt;p&gt;Dos ejemplos de esto son la "Quadratic Koch Island", que con 3 iteraciones tiene una estructura definida y la "Dragon Curve" que comienza a mostrar una estructura definida luego de 8 iteraciones. Cúantas iteraciones son necesarias depende en gran manera del fractal específico con el que estemos trabajando&lt;/p&gt;
&lt;p&gt;En el ecosistema de Python existen muchas bibliotecas para realizar gráficos, la más popular es Matplotlib, sin embargo, está pensada para graficar datos estadístico y realizar gráficos conocidos. Matplotlib tiene en particular componentes de bajo nivel que nos permitirían graficar fractales pero en esta oportunidad centraremos nuestra atención en un generalmente olvidado módulo de la biblioteca estandar, el módulo Turtle&lt;/p&gt;
&lt;h3 id="el-modulo-turtle"&gt;&lt;a class="toclink" href="#el-modulo-turtle"&gt;El módulo Turtle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Según &lt;a href="https://docs.python.org/3.6/library/turtle.html" target="_blank"&gt;la documentación de Python&lt;/a&gt;: "Los gráficos Turtle son una manera popular de introducir la programación a los niños. Era parte del lenguaje de programación Logo, desarrollado por Wally Feurzig y Seymour Papert en 1996"&lt;/p&gt;
&lt;p&gt;La clave en este tipo de gráficos es que tenemos 3 comandos básicos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Moverse hacia adelante&lt;/li&gt;
&lt;li&gt;Girar hacía la izquierda un cierto ángulo&lt;/li&gt;
&lt;li&gt;Girar hacía la derecha un cierto ángulo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Nota: La bilioteca estandar provee otros comandos pero en este articulo sólo vamos a utilizar estos 3&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Adicionalmente tenemos la opción de:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deshabilitar la escritura&lt;/li&gt;
&lt;li&gt;Habilitar la escritura&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Éstas características pueden parecer muy simples para graficar algo tan complejo como los fractales pero es por esto que vamosa utilizar otra herramienta que utiliza exactamente este pequeño conjunto de instrucciones, me refiero a los Sistemas L&lt;/p&gt;
&lt;h3 id="l-systems"&gt;&lt;a class="toclink" href="#l-systems"&gt;L-Systems&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Un Sistema L es una manera de representar estructuras recursivas (como los fractales) como cadenas de caracteres, esto es hace re-escribiendo la cadena una y otra vez. Para aquellos interesados en la definición formal:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un Sistema de Lindenmayer, también conocido como Sistema L, es un sistema de re-escritura de cadenas que puede ser usado para generar fractales de dimención entre 1 y 2. - &lt;a href="http://mathworld.wolfram.com/LindenmayerSystem.html" target="_blank"&gt;Math World Traducido&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Una vez que hayamos entendido lo que es un Sistema L podemos producir estructuras recursivas pero antes que podamos hacerlo necesitamos entender las partes que que lo forman. Todo Sistema L tiene:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un alfabeto: Un conjunto de símbolos que el Sistema L va a utilizar.&lt;/li&gt;
&lt;li&gt;Un axioma: La cadena original que se utiliza en la generación.&lt;/li&gt;
&lt;li&gt;Un conjunto de reglas de producción: estas reglas indica como debe ser reemplazado cada uno de los símbolos en la siguiente iteración.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Nota para aquellos que les gustan las ciencias de la computación: esta descripción puede sonarte familiar, y es que, en realidad es muy similar a la definición de una Gramática Formal, la diferencia primordial es que en cada iteración, a diferencia de las gramáticas, se aplican tantas reglas como sean posibles en lugar de una. Encontes puede concluirse que los Sistemas L son un subconjunto de las gramáticas libres de contexto&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Debido a que vamos a utilizar Turtle para graficar y los Sistemas L para representar los fractales, necesitamos entender de que manera podemos relacionarlos.&lt;/p&gt;
&lt;p&gt;Ya que Turtle sólo recibirá los comandos mencionados arriba, debemos asignar un símbolo a cada uno, que en conjunto representarán el alfabeto del Sistema L&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;F: Mover hacia adelante (del inglés Fowards).&lt;/li&gt;
&lt;li&gt;+: Girar a la derecha.&lt;/li&gt;
&lt;li&gt;-: Girar a la izquierda.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para poder graficar los fractales, adicionalmente debe definirse un ángulo, que será el ángulo de giro que hara Turtle cada vez que se lo indiquemos, ya sea a la izquierda o a la derecha. Por razones de simplicidad, el mismo ángulo debe utilizarse en todas las iteraciones, el Sistema L debe escribirse teniendo esto en consideración.&lt;/p&gt;
&lt;p&gt;El axioma y las reglas de producción dependerán exclusivamente del fractal pero el fractal debe ser escrito de una manera que pueda ser representado utilizando sólo los tres simbolos. Esto introduce una limitación, sólo se podrán graficar fractales compuestos por una única línea continua, así que algunos como el Conjunto de Cantor no podrán graficarse de esta manera. Esta es meramente una simplicación, ya que podrían agregarse otros comandos que permitan el movimiento sin necesidad de escribir pero para mantener las cosas simples, mantendremos la simplificación.&lt;/p&gt;
&lt;p&gt;Ahora veamos los ejemplos!&lt;/p&gt;
&lt;h2 id="ejemplos-animados"&gt;&lt;a class="toclink" href="#ejemplos-animados"&gt;Ejemplos Animados&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Los siguientes ejemplos fueron compilados de diversos sitios públicamente disponibles en internet. Decidí migrarlos a Python con la ayuda del módulo Turtle, centrarlos, añadirles color y proporcionar una manera de exportarlos en formato vectorial.&lt;/p&gt;
&lt;p&gt;Debido a que el navegador ejecuta Python mediante &lt;a href="http://www.skulpt.org/" target="_blank"&gt;Skulpt&lt;/a&gt; y el módulo Colorsys aún no está soportado, las animaciones serán en blanco y negro pero las imágenes y el código para generarlas estarán al final. Cada animación tiene un código asociado que puede abrirse de manera onlina y copiarse por medio de &lt;a href="https://repl.it/" target="_blank"&gt;Repl.it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Advertencia: Las animaciones que estás por ver son bastante pesadas, es recomendable verlas sólo con una buena conección. Los fragmentos de Repl pueden no funcionar en los usuarios que utilicen dispositivos móviles.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nota: Skulpt utiliza TU NAVEGADOR para renderizar y para hacer las animaciones así que si en cualquier caso experimentás demoras, errores o comportamiento extraño, esto puede deberse al navegador, recargar la animación o recargar la página debe solucionar la mayoría de los inconvenientes. Puede no funcionar adecuadamente en dispositivos móbiles.&lt;/p&gt;
&lt;p&gt;Los ejemplos están ordenados por orden de complejidad (mi juicio subjetivo), así que los mejores están al final&lt;/p&gt;
&lt;h2 id="koch-snowflake"&gt;&lt;a class="toclink" href="#koch-snowflake"&gt;Koch-Snowflake"&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F--F--F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F+F--F+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 7&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Koch-Snowflake_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Koch-Snowflake-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="quadratic-koch-island"&gt;&lt;a class="toclink" href="#quadratic-koch-island"&gt;Quadratic-Koch-Island&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F-F+F+FFF-F-F+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 4&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Quadratic-Koch-Island_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Quadratic-Koch-Island-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="crystal"&gt;&lt;a class="toclink" href="#crystal"&gt;Crystal&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FF+F++F+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 6&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Crystal_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Crystal-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="quadratic-snowflake"&gt;&lt;a class="toclink" href="#quadratic-snowflake"&gt;Quadratic-Snowflake&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F--F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F-F+F+F-F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 6&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Quadratic-Snowflake_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Quadratic-Snowflake-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="box-fractal"&gt;&lt;a class="toclink" href="#box-fractal"&gt;Box-Fractal&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F-F-F-F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F-F+F+F-F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 6&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Box-Fractal_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Box-Fractal-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="levy-c-curve"&gt;&lt;a class="toclink" href="#levy-c-curve"&gt;Levy-C-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;+F--F+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 16&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Levy-C-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Levy-C-Curve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="sierpinski-arrowhead"&gt;&lt;a class="toclink" href="#sierpinski-arrowhead"&gt;Sierpinski-Arrowhead&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YF&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;YF+XF+Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XF-YF-X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 10&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Sierpinski-Arrowhead_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Siepinski-Arrowhead-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="siepinski-sieve"&gt;&lt;a class="toclink" href="#siepinski-sieve"&gt;Siepinski-Sieve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;FXF--FF--FF&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--FXF++FXF++FXF--&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 8&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Siepinski-Sieve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Siepinski-Sieve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="board"&gt;&lt;a class="toclink" href="#board"&gt;Board&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FF+F+F+F+FF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 5&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Board_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Board-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="tiles"&gt;&lt;a class="toclink" href="#tiles"&gt;Tiles&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FF+F-F+F+FF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 4&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Tiles_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Tiles-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="rings"&gt;&lt;a class="toclink" href="#rings"&gt;Rings&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FF+F+F+F+F+F-F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 4&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Rings_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Rings-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="cross-2"&gt;&lt;a class="toclink" href="#cross-2"&gt;Cross-2&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F+F-F+F+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 6&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Cross-2_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Cross-2-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="pentaplexity"&gt;&lt;a class="toclink" href="#pentaplexity"&gt;Pentaplexity&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F++F++F++F++F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F++F++F+++++F-F++F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 5&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Pentaplexity_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Pentaplexity-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="32-segment-curve"&gt;&lt;a class="toclink" href="#32-segment-curve"&gt;32-Segment-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-F+F-F-F+F+FF-F+F+FF+F-F-FF+FF-FF+F+F-FF-F-F+FF-F-F+F+F-F+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 3&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
   &lt;source data-src="/blog/images/fractals/450/32-Segment-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-32-Segment-Curve-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="peano-gosper-curve"&gt;&lt;a class="toclink" href="#peano-gosper-curve"&gt;Peano-Gosper-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;FX&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X+YF++YF-FX--FXFX-YF+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-FX+YFYF++YF+FX--FX-Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 6&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Peano-Gosper-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Peano-Gosper-Curve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="sierpinski-curve"&gt;&lt;a class="toclink" href="#sierpinski-curve"&gt;Sierpinski-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+XF+F+XF&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XF-F+F-XF+F+XF-F+F-X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 8&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Sierpinski-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Siepinski-Curve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="krishna-anklets"&gt;&lt;a class="toclink" href="#krishna-anklets"&gt;Krishna-Anklets&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; -X--X&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XFX--XFX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 9&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Krishna-Anklets_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Krishna-Anklets-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="quadratic-gosper"&gt;&lt;a class="toclink" href="#quadratic-gosper"&gt;Quadratic-Gosper&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YF&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;XFX-YF-YF+FX+FX-YF-YFFX+YF+FXFXYF-FX+YF+FXFX+YF-FXYF-YF-FX+FX+YFYF-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;+FXFX-YF-YF+FX+FXYF+FX-YFYF-FX-YF+FXYFYF-FX-YFFX+FX+YF-YF-FX+FX+YFY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 3&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Quadratic-Gosper_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Quadratic-Gosper-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="moore-curve"&gt;&lt;a class="toclink" href="#moore-curve"&gt;Moore-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;LFL-F-LFL&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;L&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;+RF-LFL-FR+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-LF+RFR+FL-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 8&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Moore-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Moore-Curve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="hilberts-curve"&gt;&lt;a class="toclink" href="#hilberts-curve"&gt;Hilberts-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;L&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;L&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;+RF-LFL-FR+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-LF+RFR+FL-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 9&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Hilberts-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Hilbert-Curve-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="hilbert-curve-ii"&gt;&lt;a class="toclink" href="#hilbert-curve-ii"&gt;Hilbert-Curve-II&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XFYFX+F+YFXFY-F-XFYFX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;YFXFY-F-XFYFX+F+YFXFY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 6&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Hilbert-Curve-II_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Hilbert-Curve-II-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="peano-curve"&gt;&lt;a class="toclink" href="#peano-curve"&gt;Peano-Curve"&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F+F-F-F-F+F+F+F-F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 5&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Peano-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Peano-Curve-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="cross"&gt;&lt;a class="toclink" href="#cross"&gt;Cross&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F+FF++F+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 6&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Cross_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Cross-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="triangle"&gt;&lt;a class="toclink" href="#triangle"&gt;Triangle&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F+F+F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F-F+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 9&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Triangle_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Triangle-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="dragon-curve"&gt;&lt;a class="toclink" href="#dragon-curve"&gt;Dragon-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;FX&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X+YF+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-FX-Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 16&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Dragon-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Dragon-Curve-With-Python?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="terdragon-curve"&gt;&lt;a class="toclink" href="#terdragon-curve"&gt;TerDragon-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F-F+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 10&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/TerDragon-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-TerDragon-Curve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="twin-dragon-curve"&gt;&lt;a class="toclink" href="#twin-dragon-curve"&gt;Twin-Dragon-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;FX+FX&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X+YF+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-FX-Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 16&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/Twin-Dragon-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-Twin-Dragon-Curve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="threedragon-curve"&gt;&lt;a class="toclink" href="#threedragon-curve"&gt;ThreeDragon-Curve&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;axiom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;FX+FX+FX&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X+YF+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-FX-Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="c1"&gt;# TOP: 15&lt;/span&gt;
&lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="two-column"&gt;
&lt;video class="b-lazy" autoplay loop&gt;
    &lt;source data-src="/blog/images/fractals/450/ThreeDragon-Curve_450x450.mp4" type="video/mp4"&gt;
&lt;/video&gt;

&lt;iframe class="b-lazy" height="549px" width="469px" data-src="https://repl.it/@ELC/Drawing-ThreeDragon-Curve-With-Python-and-Turtle?lite=true&amp;outputonly=1" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="codigo"&gt;&lt;a class="toclink" href="#codigo"&gt;Código&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Todos los ejemplos de arriba fueron producidos con el mismo código, en el mientras tanto, algunos desafíos surgieron, principalmente como mantener los fractales centrados (o al menos tanto como sea posible), lidiando con colores, inversiónes, traslaciones y como exportarlos rápidamente a formatos vectoriales. Aquí voy a mostrarte la versión más básica, si quieres saber como solucioné todos estos desafios, no dudes en dejar un comentario y haré una Parte 2.&lt;/p&gt;
&lt;p&gt;Esta versión grafica en blanco y negro sin funcionalidades de exportación.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;start_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;iters&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;
    &lt;span class="n"&gt;end_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;end_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;start_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;start_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;end_string&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;end_string&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;draw_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;x_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset_angle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;inst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;wn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Screen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset_angle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pensize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hideturtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exitonclick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="explicacion-del-codigo"&gt;&lt;a class="toclink" href="#explicacion-del-codigo"&gt;Explicación del Código&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo primero que necesitamos hacer es importar el módulo Turtle&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;start_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;iters&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;
    &lt;span class="n"&gt;end_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;end_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;start_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;start_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;end_string&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;end_string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Luego lo que necesitamos es generar el Sistema L que será el conjunto de instrucciones para Turtle. Definimos una función llamada &lt;code&gt;create_l_system&lt;/code&gt; que recibe el número de iteraciones, el axioma y las reglas de producción. Comienza con el axioma y utiliza una variable auxiliar llamada &lt;code&gt;end_string&lt;/code&gt;, si la iteración es igual a 0, retorna el axioma ya que algunos fractales pueden ser graficados con iteraciones iguales a 0. Se asume que las reglas con un diccionario así que la clave será única y representa al símbolo mientras que el valor representa con que símbolos debe ser remplazado. Se concatenan todos los remplazos para cada símbolo y luego se acaba con la cadena para la próxima iteración.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;draw_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Posteriormente definimos &lt;code&gt;draw_l_system&lt;/code&gt; que recibe a Turtle, un conjunto de instrucciones (la salida del sistema L), un ángulo para girar tanto a la derecha como a la izquiera y la longitud de cada línea individual. Luego se tiene una simple estructura elif para cada uno de los comandos definidos anteriormente.&lt;/p&gt;
&lt;div class="highlight "&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;x_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset_angle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;inst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axiom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;wn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Screen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset_angle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pensize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw_l_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hideturtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exitonclick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finalmente se tiene una función &lt;code&gt;main&lt;/code&gt; que recibe todos los parámetros que necesita para la generación del Sistema L así como &lt;code&gt;y_offset&lt;/code&gt;, &lt;code&gt;x_offset&lt;/code&gt;, &lt;code&gt;offset_angle&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt; y &lt;code&gt;height&lt;/code&gt;. Los primeros tres representan la traslación de Turtle, esto es sencillamente para posicionar el gráfico en el lugar deseado del lienzo.&lt;/p&gt;
&lt;p&gt;La función primeramente genera el conjunto de instrucciones y lo guarda en &lt;code&gt;inst&lt;/code&gt; y luego inicializa Turtle y la Screen, lo posiciona en el lugar definido y luego grafica las instrucciones, por último, espera al evento click para cerrarse.&lt;/p&gt;
&lt;h2 id="consideraciones-especiales"&gt;&lt;a class="toclink" href="#consideraciones-especiales"&gt;Consideraciones Especiales&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Como mencioné antes, existen muchas limitaciones en este escenario, primero que nada no incluimos la posibilidad de mover a Turtle sin dibujar, esto requeriría un símbolo adicional, tampoco hay un símbolo ni para ir hacía atras, o recordar posiciones anteriores. Esto no fue necesario para ninguno de los fractales de los ejemplos pero si lo es para otros (como por ejemplo los árboles fractales).&lt;/p&gt;
&lt;h2 id="recursos-adicionales"&gt;&lt;a class="toclink" href="#recursos-adicionales"&gt;Recursos Adicionales&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hay muchos recursos en internet sobre fractales, tanto desde el área de la programación como desde la perspectiva de la matemática. Les dejo a continuación dos que me resultaron sumamente interesantes: el video de 3Blue1Brown para la parte de matemática y el de CodingTrain para la parte de programación.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coding Train&lt;/strong&gt;&lt;/p&gt;
&lt;div class="youtube-container"&gt;
    &lt;iframe class="b-lazy" width="560px" height="315px" data-src="https://www.youtube.com/embed/f6ra024-ASY?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3Blue1Brown&lt;/strong&gt;&lt;/p&gt;
&lt;div class="youtube-container"&gt;
    &lt;iframe class="b-lazy" width="560px" height="315px" data-src="https://www.youtube.com/embed/gB9n2gHsHN4?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id="fuente-y-referencias"&gt;&lt;a class="toclink" href="#fuente-y-referencias"&gt;Fuente y Referencias&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Este post fue inspirado por &lt;a href="http://mathworld.wolfram.com/LindenmayerSystem.html" target="_blank"&gt;un post de Math World&lt;/a&gt;, por el &lt;a href="http://paulbourke.net/fractals/lsys/" target="_blank"&gt;blog de Paul Broke&lt;/a&gt; y por un trabajo práctico para la materia de Algoritmos Genéticos.&lt;/p&gt;</content><category term="Programming"></category><category term="Python"></category><category term="Fractals"></category><category term="Turtle"></category></entry></feed>